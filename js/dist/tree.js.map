{"version":3,"file":"tree.js","sources":["../src/tree.js"],"sourcesContent":["import $ from 'jquery'\nimport Ajax from './ajax'\nimport Toast from './toast'\nimport Tool from './tool'\n\nconst NAME                = 'tree'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst Customer = {\n  ZTREE :'ztree',\n  CHECK : 'check',\n  EDIT :'edit',\n  AUTO :'auto',\n  BAN_URL : 'ban-url',\n  NOTURL : 'NotUrl',\n  URL : 'url',\n  TARGET : 'target',\n  TARGET_URL : 'targeturl',\n  PARENT : 'parent',\n  SUC : 'suc',\n  ID : 'id',\n  PID :'pid'\n}\n\n/**\n * ------------------------------------------------------------------------\n *  使用ztree作为树结构 http://www.treejs.cn/v3\n *  @author lyc\n *  @date 2020年06月04日17:48:50\n * ------------------------------------------------------------------------\n */\nclass Tree {\n  constructor(element, setting, nodes) {\n    this.checkZtree()\n    this._element = element\n    this._config = this.prepareOptions(setting)\n    this._nodes = nodes\n    this.ztree = this.init()\n    return this\n  }\n  static get NAME() {\n    return NAME\n  }\n\n  // ----------------------------------------------------------------------\n  // 检查ztree 是否存在\n  // ----------------------------------------------------------------------\n\n  checkZtree() {\n    if (!$.fn.zTree) {\n      throw new TypeError('ztree is not load, plz check out')\n    }\n  }\n\n  // ----------------------------------------------------------------------\n  // 初始化树结构\n  // ----------------------------------------------------------------------\n  init() {\n    return $.fn.zTree.init($(this._element), this._config, this._nodes)\n  }\n\n\n  // ----------------------------------------------------------------------\n  // 数据配置准备\n  // ----------------------------------------------------------------------\n  prepareOptions(setting) {\n    if (!this._element.classList.contains(Customer.ZTREE)) {\n      this._element.classList.add(Customer.ZTREE)\n    }\n    const $this = $(this._element)\n    // 是否开启选中\n    const check = this._element.hasAttribute(Customer.CHECK)\n    // 是否开启编辑\n    const edit = this._element.hasAttribute(Customer.EDIT)\n    // 禁用url\n    const banUrl = this._element.hasAttribute(Customer.BAN_URL)\n    // 自动参数\n    let autoParam = this._element.getAttribute(Customer.AUTO)\n    autoParam = autoParam && typeof autoParam !== 'string' ? JSON.parse(autoParam) : [Customer.ID, Customer.PID]\n    // 加载树的url\n    const url = $this.data(Customer.URL)\n    // 跳转目标容器\n    const target = $this.data(Customer.TARGET)\n    // 跳转目标需要的url\n    const targeturl = $this.data(Customer.TARGET_URL)\n    // 父节点是否可以点击\n    const parent = !this._element.hasAttribute(Customer.PARENT)\n    // 树加载成功之后的回调\n    const suc = $this.data(Customer.SUC)\n    const params = $this.data()\n    if (params) {\n      delete params.url\n      delete params.target\n      delete params.targeturl\n      delete params.suc\n    }\n    let _option = {// ztree config\n      view: {\n        ...edit ? {\n          addHoverDom:this.addHoverDom,\n          removeHoverDom :this.removeHoverDom\n        } : {},\n        selectedMulti: false\n      },\n      check: {\n        enable: check\n      },\n      edit: {\n        enable: edit\n      },\n      data: {\n        simpleData: {\n          enable: true,\n          idKey: Customer.ID,\n          pIdKey: Customer.PID,\n          rootPId: 0\n        },\n        key :{\n          url :banUrl ? Customer.URL : Customer.NOTURL\n        }\n      },\n      async: {\n        enable: true,\n        otherParam: params,\n        autoParam,\n        type: Ajax.POST,\n        url,\n        dataType: Ajax.JSON,\n        dataFilter: this.filter\n      },\n      callback: {\n        onClick : this.onClick(target, targeturl, parent, params),\n        onAsyncError: this.onAsyncError,\n        onAsyncSuccess: this.onAsyncSuccess(suc)\n      }\n    }\n    if (!setting) {\n      setting = {}\n    }\n    _option = {\n      ..._option,\n      ...setting\n    }\n    return _option\n  }\n\n  // ----------------------------------------------------------------------\n  // 点击跳转\n  // ----------------------------------------------------------------------\n  onClick(target, targeturl, parent, params) {\n    return function (event, treeId, treeNode) {\n      const isParent = treeNode.isParent\n      if (isParent && parent) {\n        return\n      }\n      if (!targeturl || !target) {\n        return\n      }\n      const datas = {\n        ...treeNode,\n        ...params\n      }\n      Ajax.postHTML(targeturl, datas, (result) => {\n        if (!result) {\n          return Toast.err('请求失败')\n        }\n        const $target = ($(`#${treeId}`).closest('.query-main') || document).find(`${target}:first`)\n        return $target.html(result).initUI()\n      })\n    }\n  }\n\n\n  // ----------------------------------------------------------------------\n  // 交互成功\n  // ----------------------------------------------------------------------\n  onAsyncSuccess(callback) {\n    const suc = Tool.eval(callback)\n    if (typeof suc === 'function') {\n      return suc\n    }\n    return null\n  }\n\n  // ----------------------------------------------------------------------\n  // 交互失败\n  // ----------------------------------------------------------------------\n  onAsyncError(event, treeId, treeNode, XMLHttpRequest) {\n    const err = Ajax.error()\n    return err(XMLHttpRequest)\n  }\n\n\n  // ----------------------------------------------------------------------\n  // 数据过滤\n  // ----------------------------------------------------------------------\n  filter(treeId, parentNode, datas) {\n    if (!datas || !datas.data) {\n      return null\n    }\n    return datas.data\n  }\n\n  // ----------------------------------------------------------------------\n  // 添加节点\n  // ----------------------------------------------------------------------\n  addHoverDom(treeId, treeNode) {\n    const sObj = $(`#${treeNode.tId}_span`)\n    if (treeNode.editNameFlag || $(`#addBtn_${treeNode.tId}`).length > 0) {\n      return\n    }\n    const addStr = `<span class='button add' id='addBtn_${treeNode.tId\n    }' title='add node' onfocus='this.blur();'></span>`\n    sObj.after(addStr)\n    const btn = $(`#addBtn_${treeNode.tId}`)\n    if (btn) {\n      btn.on('click', () => {\n        const zTree = $.fn.zTree.getZTreeObj('treeDemo')\n        const id = new Date().getTime()\n        zTree.addNodes(treeNode, {\n          id,\n          pId: treeNode.id,\n          name: `new node${id}`\n        })\n        return false\n      })\n    }\n  }\n\n  // ----------------------------------------------------------------------\n  // 删除节点\n  // ----------------------------------------------------------------------\n  removeHoverDom(treeId, treeNode) {\n    $(`#addBtn_${treeNode.tId}`).off().remove()\n  }\n\n  // ----------------------------------------------------------------------\n  // 搜索树结构\n  // @param zTreeId ztree对象的id,不需要#\n  // @param searchField 输入框选择器\n  // @param isHighLight 是否高亮,默认高亮,传入false禁用\n  // @param isExpand 是否展开,默认合拢,传入true展开\n  // ----------------------------------------------------------------------\n  static fuzzySearch(zTreeId, searchField, isHighLight, isExpand) {\n    const zTreeObj = $.fn.zTree.getZTreeObj(zTreeId)// get the ztree object by ztree id\n    if (!zTreeObj) {\n      return\n    }\n    const nameKey = zTreeObj.setting.data.key.name // get the key of the node name\n    isHighLight = isHighLight !== false// default true, only use false to disable highlight\n    isExpand = Boolean(isExpand) // not to expand in default\n    zTreeObj.setting.view.nameIsHTML = isHighLight // allow use html in node name for highlight use\n\n    // eslint-disable-next-line no-useless-escape\n    const metaChar = '[\\\\[\\\\]\\\\\\\\\\^\\\\$\\\\.\\\\|\\\\?\\\\*\\\\+\\\\(\\\\)]' // js meta characters\n    const rexMeta = new RegExp(metaChar, 'gi')// regular expression to match meta characters\n\n    // keywords filter function\n    function ztreeFilter(zTreeObj, _keywords) {\n      if (!_keywords) {\n        _keywords = '' // default blank for _keywords\n      }\n\n      // function to find the matching node\n      function filterFunc(node) {\n        if (node && node.oldname && node.oldname.length > 0) {\n          node[nameKey] = node.oldname // recover oldname of the node if exist\n        }\n        zTreeObj.updateNode(node) // update node to for modifications take effect\n        if (_keywords.length === 0) {\n          // return true to show all nodes if the keyword is blank\n          zTreeObj.showNode(node)\n          zTreeObj.expandNode(node, isExpand)\n          return true\n        }\n        // transform node name and keywords to lowercase\n        if (node[nameKey] && node[nameKey].toLowerCase().indexOf(_keywords.toLowerCase()) !== -1) {\n          if (isHighLight) { // highlight process\n            // a new variable 'newKeywords' created to store the keywords information\n            // keep the parameter '_keywords' as initial and it will be used in next node\n            // process the meta characters in _keywords thus the RegExp can be correctly used in str.replace\n            const newKeywords = _keywords.replace(rexMeta, (matchStr) =>\n              // add escape character before meta characters\n              `\\\\${matchStr}`\n            )\n            node.oldname = node[nameKey] // store the old name\n            const rexGlobal = new RegExp(newKeywords, 'gi')// 'g' for global,'i' for ignore case\n            // use replace(RegExp,replacement) since replace(/substr/g,replacement) cannot be used here\n            node[nameKey] = node.oldname.replace(rexGlobal, (originalText) => {\n              // highlight the matching words in node name\n              const highLightText =\n                `<span style=\"color: whitesmoke;background-color: darkred;border-radius: 0.25rem;\">${\n                  originalText\n                }</span>`\n              return highLightText\n            })\n            zTreeObj.updateNode(node) // update node for modifications take effect\n          }\n          zTreeObj.showNode(node)// show node with matching keywords\n          return true // return true and show this node\n        }\n\n        zTreeObj.hideNode(node) // hide node that not matched\n        return false // return false for node not matched\n      }\n\n      const nodesShow = zTreeObj.getNodesByFilter(filterFunc) // get all nodes that would be shown\n      processShowNodes(nodesShow, _keywords)// nodes should be reprocessed to show correctly\n    }\n\n    function processShowNodes(nodesShow, _keywords) {\n      if (nodesShow && nodesShow.length > 0) {\n        // process the ancient nodes if _keywords is not blank\n        if (_keywords.length > 0) {\n          $.each(nodesShow, (n, obj) => {\n            const pathOfOne = obj.getPath()// get all the ancient nodes including current node\n            if (pathOfOne && pathOfOne.length > 0) {\n              // i < pathOfOne.length-1 process every node in path except self\n              for (let i = 0; i < pathOfOne.length - 1; i++) {\n                zTreeObj.showNode(pathOfOne[i]) // show node\n                zTreeObj.expandNode(pathOfOne[i], true) // expand node\n              }\n            }\n          })\n        } else { // show all nodes when _keywords is blank and expand the root nodes\n          const rootNodes = zTreeObj.getNodesByParam('level', '0')// get all root nodes\n          $.each(rootNodes, (n, obj) => {\n            zTreeObj.expandNode(obj, true) // expand all root nodes\n          })\n        }\n      }\n    }\n\n    // listen to change in input element\n    $(searchField).on('input propertychange', function () {\n      let _keywords = $(this).val()\n      if (_keywords) {\n        _keywords = _keywords.trim()\n      }\n      searchNodeLazy(_keywords) // call lazy load\n    })\n\n    let timeoutId = null\n    let lastKeyword = ''\n    const time = 500\n    // excute lazy load once after input change, the last pending task will be cancled\n    function searchNodeLazy(_keywords) {\n      if (timeoutId) {\n        // clear pending task\n        clearTimeout(timeoutId)\n      }\n      timeoutId = setTimeout(() => {\n        if (lastKeyword === _keywords) {\n          return\n        }\n        ztreeFilter(zTreeObj, _keywords) // lazy load ztreeFilter function\n        // $(searchField).focus();//focus input field again after filtering\n        lastKeyword = _keywords\n      }, time)\n    }\n  }\n\n  static _jQueryInterface(setting, nodes) {\n    const tree = new Tree(this, setting, nodes)\n    $(this).data(NAME, tree)\n    return tree\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n$.fn[NAME] = Tree._jQueryInterface\n$.fn[NAME].Constructor = Tree\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Tree._jQueryInterface\n}\n\nexport default Tree\n"],"names":["NAME","JQUERY_NO_CONFLICT","$","fn","Customer","ZTREE","CHECK","EDIT","AUTO","BAN_URL","NOTURL","URL","TARGET","TARGET_URL","PARENT","SUC","ID","PID","Tree","element","setting","nodes","checkZtree","_element","_config","prepareOptions","_nodes","ztree","init","zTree","TypeError","classList","contains","add","$this","check","hasAttribute","edit","banUrl","autoParam","getAttribute","JSON","parse","url","data","target","targeturl","parent","suc","params","_option","view","addHoverDom","removeHoverDom","selectedMulti","enable","simpleData","idKey","pIdKey","rootPId","key","async","otherParam","type","Ajax","POST","dataType","dataFilter","filter","callback","onClick","onAsyncError","onAsyncSuccess","event","treeId","treeNode","isParent","datas","postHTML","result","Toast","err","$target","closest","document","find","html","initUI","Tool","eval","XMLHttpRequest","error","parentNode","sObj","tId","editNameFlag","length","addStr","after","btn","on","getZTreeObj","id","Date","getTime","addNodes","pId","name","off","remove","fuzzySearch","zTreeId","searchField","isHighLight","isExpand","zTreeObj","nameKey","Boolean","nameIsHTML","metaChar","rexMeta","RegExp","ztreeFilter","_keywords","filterFunc","node","oldname","updateNode","showNode","expandNode","toLowerCase","indexOf","newKeywords","replace","matchStr","rexGlobal","originalText","highLightText","hideNode","nodesShow","getNodesByFilter","processShowNodes","each","n","obj","pathOfOne","getPath","i","rootNodes","getNodesByParam","val","trim","searchNodeLazy","timeoutId","lastKeyword","time","clearTimeout","setTimeout","_jQueryInterface","tree","Constructor","noConflict"],"mappings":"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"}