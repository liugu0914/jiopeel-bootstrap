{"version":3,"file":"editor.js","sources":["../src/editor.js"],"sourcesContent":["import Ajax from './ajax'\n\nconst NAME                = 'edior'\nconst VERSION             = '21.0.0'\nconst UPLOAD_URL          = 'http://127.0.0.1/file/upload'\nconst FILENAME            = 'file'\n\nclass Editor {\n  constructor(loader) {\n    // The file loader instance to use during the upload.\n    this.loader = loader\n    this.uploadUrl = UPLOAD_URL\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  static get VERSION() {\n    return `CKEditor 5 version : ${VERSION}`\n  }\n\n  upload() {\n    return this.loader.file\n      .then((file) => new Promise((resolve, reject) => {\n        this._initRequest()\n        this._initListeners(resolve, reject, file)\n        this._sendRequest(file)\n      }))\n  }\n\n  // Aborts the upload process.\n  abort() {\n    if (this.xhr) {\n      this.xhr.abort()\n    }\n  }\n\n  // Initializes the XMLHttpRequest object using the URL passed to the constructor.\n  _initRequest() {\n    this.xhr = new XMLHttpRequest()\n    const xhr = this.xhr\n    // Note that your request may look different. It is up to you and your editor\n    // integration to choose the right communication channel. This example uses\n    // a POST request with JSON as a data structure but your configuration\n    // could be different.\n    xhr.open(Ajax.POST, this.uploadUrl, true)\n    xhr.responseType = Ajax.JSON\n  }\n\n  // Initializes XMLHttpRequest listeners.\n  _initListeners(resolve, reject, file) {\n    const xhr = this.xhr\n    const loader = this.loader\n    const genericErrorText = `Couldn't upload file: ${file.name}.`\n\n    xhr.addEventListener('error', () => reject(genericErrorText))\n    xhr.addEventListener('abort', () => reject())\n    xhr.addEventListener('load', () => {\n      const response = xhr.response\n      // This example assumes the XHR server's \"response\" object will come with\n      // an \"error\" which has its own \"message\" that can be passed to reject()\n      // in the upload promise.\n      //\n      // Your integration may handle upload errors in a different way so make sure\n      // it is done properly. The reject() function must be called when the upload fails.\n      if (!response || response.error) {\n        return reject(response && response.error ? response.error.message : genericErrorText)\n      }\n      // 成功回调处理\n      const data = response.data\n      // If the upload is successful, resolve the upload promise with an object containing\n      // at least the \"default\" URL, pointing to the image on the server.\n      // This URL will be used to display the image in the content. Learn more in the\n      // UploadAdapter#upload documentation.\n      return resolve({\n        default: data.url\n      })\n    })\n\n    // Upload progress when it is supported. The file loader has the #uploadTotal and #uploaded\n    // properties which are used e.g. to display the upload progress bar in the editor\n    // user interface.\n    if (xhr.upload) {\n      xhr.upload.addEventListener('progress', (evt) => {\n        if (evt.lengthComputable) {\n          loader.uploadTotal = evt.total\n          loader.uploaded = evt.loaded\n        }\n      })\n    }\n  }\n\n  // Prepares the data and sends the request.\n  _sendRequest(file) {\n    // Prepare the form data.\n    const data = new FormData()\n\n    data.append(FILENAME, file)\n\n    // Important note: This is the right place to implement security mechanisms\n    // like authentication and CSRF protection. For instance, you can use\n    // XMLHttpRequest.setRequestHeader() to set the request headers containing\n    // the CSRF token generated earlier by your application.\n\n    // Send the request.\n    this.xhr.send(data)\n  }\n\n  static MyCustomUploadAdapterPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) =>\n    // Configure the URL to the upload script in your back-end here!\n      new Editor(loader)\n  }\n\n  static init(selector) {\n    // eslint-disable-next-line no-undef\n    if (!ClassicEditor) {\n      throw new ReferenceError(`CKEditor 5  is not load! need version:${VERSION}, plz chk out`)\n    }\n    const target = typeof selector === 'string' ? document.querySelector(selector) : selector\n    // eslint-disable-next-line no-undef\n    return ClassicEditor\n      .create(target, {\n        extraPlugins: [Editor.MyCustomUploadAdapterPlugin],\n        language: 'zh-cn'\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error)\n      })\n  }\n}\n\nexport default Editor\n"],"names":["NAME","VERSION","UPLOAD_URL","FILENAME","Editor","loader","uploadUrl","upload","file","then","Promise","resolve","reject","_initRequest","_initListeners","_sendRequest","abort","xhr","XMLHttpRequest","open","Ajax","POST","responseType","JSON","genericErrorText","name","addEventListener","response","error","message","data","default","url","evt","lengthComputable","uploadTotal","total","uploaded","loaded","FormData","append","send","MyCustomUploadAdapterPlugin","editor","plugins","get","createUploadAdapter","init","selector","ClassicEditor","ReferenceError","target","document","querySelector","create","extraPlugins","language","catch","console","log"],"mappings":"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"}